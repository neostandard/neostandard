name: Reusable Compatibility

on:
  workflow_call:
    inputs:
      moduleSet:
        description: 'Module set'
        required: true
        type: string
      flags:
        description: 'Flags'
        type: string
      quiet:
        description: 'Quiet'
        type: boolean
        default: true
  workflow_dispatch:
    inputs:
      moduleSet:
        description: 'Module set'
        required: true
        default: 'standard-filtered'
        type: choice
        options:
        - semistandard
        - standard
        - ts-standard
      flags:
        description: 'Flags'
        type: string
      quiet:
        description: 'Quiet'
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  read_repos:
    name: Read list of ${{ inputs.moduleSet || github.event.inputs.moduleSet }} repos
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
      - id: set-matrix
        run: echo "matrix=$(jq -c '.' dependents-data/${{ inputs.moduleSet || github.event.inputs.moduleSet }}.json)" >> $GITHUB_OUTPUT

  test_external:
    needs: read_repos
    name: Test ${{ matrix.project }}
    runs-on: ubuntu-latest
    if: needs.read_repos.outputs.matrix != '[]'

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.read_repos.outputs.matrix) }}

    steps:
      - name: Checkout main project
        uses: actions/checkout@v5
        with:
          path: main
          persist-credentials: false
          show-progress: false

      - name: Checkout ${{ matrix.project }}
        uses: actions/checkout@v5
        with:
          repository: ${{ matrix.project }}
          path: project
          persist-credentials: false
          show-progress: false

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # New prefix generated every 120 days, to ensure npm cache doesn't grow too large
      # See https://github.com/actions/setup-node/pull/702
      - name: Get npm cache timed expiration
        id: npm-timed-expiration
        run: echo "prefix=$(( $(date +%s) / 60 / 60 / 24 / 120 ))" >> $GITHUB_OUTPUT

      - name: Determine npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ steps.npm-timed-expiration.outputs.prefix }}-${{ hashFiles('main/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.npm-timed-expiration.outputs.prefix }}-

      - name: install main
        run: npm ci --ignore-scripts --force --no-fund --no-audit
        working-directory: ./main
      - name: install project
        run: '[ -f package-lock.json ] && npm ci --ignore-scripts --force --no-fund --no-audit || npm install --ignore-scripts --force --no-fund --no-audit'
        working-directory: ./project

      - name: generate config
        run: ../main/cli.mjs --migrate ${{inputs.flags || github.event.inputs.flags || ''}} | sed "s/'neostandard'/'..\/main\/index.js'/" > eslint.config.js && cat eslint.config.js
        working-directory: ./project

      - name: run eslint
        run: ../main/node_modules/.bin/eslint -c eslint.config.js ${{(inputs.quiet || github.event.inputs.quiet) && '--quiet' || ''}}
        working-directory: ./project
  test_external_completed:
    needs: test_external
    name: Compatibility tests successful
    runs-on: ubuntu-latest
    steps:
    - run: echo Success!
