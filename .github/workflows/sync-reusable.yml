# Inspired by https://github.com/SocketDev/workflows/blob/fe40aa6135a5ea6d81ad8103e4f044d2f9227e41/.github/workflows/reusable-sync.yml

name: Reusable Sync

on:
  workflow_call:
    secrets:
      GITHUB_TOKEN_OVERRIDE:
        description: 'If you need to override the GITHUB_TOKEN used with the "gh" cli, then do so with this one'
        required: false

    inputs:
      npm-sync-script:
        description: 'The name of the script to run as the sync.'
        required: true
        type: string

      branch-name:
        description: 'The name of the branch to create'
        required: true
        type: string

      pr-title:
        description: 'The title of the PR.'
        required: true
        type: string
      pr-body:
        description: 'The body of the PR.'
        required: true
        type: string

      commit-message:
        description: 'The title of the PR.'
        required: true
        type: string

      commit-user:
        description: 'The name to use in the commit.'
        required: false
        default: "github-actions[bot]"
        type: string
      commit-email:
        description: 'The email to use in the commit.'
        required: false
        default: "41898282+github-actions[bot]@users.noreply.github.com"
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    name: Sync ${{ inputs.npm-sync-script }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: lts/*
      - run: npm ci

      # Actual syncing
      - name: Prepare for diff
        run: >
          for PROJECT in $(jq -r 'join(\" \")' dependents-data/projects.json); do
            cp \"dependents-data/$PROJECT.json\" \"dependents-data/$PROJECT-old.json\"
          done

      - name: Run npm sync script
        run: npm run ${{ inputs.npm-sync-script }}

      - name: Diff
        id: diff
        run: |
          for PROJECT in $(jq -r 'join(" ")' dependents-data/projects.json); do
            if ! diff "dependents-data/$PROJECT-old.json" "dependents-data/$PROJECT.json"; then
              echo "- Dependents in $PROJECT are diffing" >> "$GITHUB_STEP_SUMMARY"
              echo "hasDiff=true" >> "$GITHUB_OUTPUT"
            fi
          done

      # Commit, push and open a PR if that's the need

      # Inspired by https://github.com/actions/toolkit/blob/0db3029fcfcb1393a2b3ccd14caecd7a3460af4e/.github/workflows/update-github.yaml#L22-L23
      # And by https://github.com/actions/deploy-pages/blob/ff669327f73994ba35f45d1cd2fc81d82d1c852c/.github/workflows/rebuild-dependabot-prs.yml#L43-L44
      - name: Commit and push any changes
        if: steps.diff.outputs.hasDiff
        id: push-changes
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            git config --global user.name "${{ inputs.commit-user }}"
            git config --global user.email "${{ inputs.commit-email }}"
            git checkout -b ${{ inputs.branch-name }}
            git add .
            if (! git show-ref origin/${{ inputs.branch-name }} -q) || [[ "$(git diff origin/${{ inputs.branch-name }} --stat)" != "" ]]; then
              echo "createPR=true" >> $GITHUB_OUTPUT
              git commit -m "${{ inputs.commit-message }}"
              git push origin ${{ inputs.branch-name }} -fu --no-verify
            fi
          fi

      - name: Open a PR for the sync
        if: steps.push-changes.outputs.createPR
        continue-on-error: true
        run: gh pr create --head ${{ inputs.branch-name }} --title " ${{ inputs.pr-title }}" --body "${{ inputs.pr-body }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN_OVERRIDE || secrets.GITHUB_TOKEN }}
