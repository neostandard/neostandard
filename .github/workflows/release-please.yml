name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  release_please:
    name: release-please
    runs-on: ubuntu-latest
    if: github.repository == 'neostandard/neostandard'
    outputs:
      releaseCreated: ${{ steps.release.outputs.release_created }}
    environment: sync
    steps:
      # Generate bot token
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Retrieve GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      # Release please
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json
          token: ${{ steps.app-token.outputs.token }}

  npm_publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    environment: npm
    needs: release_please
    if: needs.release_please.outputs.releaseCreated
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          show-progress: false
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci --ignore-scripts --force --no-fund --no-audit

      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
